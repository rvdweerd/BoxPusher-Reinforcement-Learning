#pragma once
#include <vector>

std::vector< std::vector<std::vector<char>>> LoadGrids() {
	std::vector< std::vector<std::vector<char>>> allGrids;
	allGrids.push_back(
		{
			{'#', '#', '#', '#', '#', '#'},
			{'#', 'T', '#', '#', '#', '#'},
			{'#', '.', '.', 'B', '.', '#'},
			{'#', '.', '#', '#', '.', '#'},
			{'#', '.', '.', '.', 'S', '#'},
			{'#', '#', '#', '#', '#', '#'}
		}
	);
	allGrids.push_back(
		{
			{'.', '.', '#', '.', '.', '.', '.', '#'},
			{'.', 'B', '.', '.', '.', '.', '.', '#'},
			{'.', '.', 'S', '.', '.', '.', '.', '.'},
			{'.', '#', '.', '.', '.', '.', '.', '.'},
			{'.', '.', '.', '.', '.', '.', '.', '.'},
			{'.', '.', '.', 'T', '.', '.', '.', '.'},
			{'.', '.', '.', '.', '.', '.', '.', '#'},
			{'.', '#', '.', '.', '.', '.', '.', '.'}
		}
	);
	allGrids.push_back(
		{
			{'#', '#', '.', '#', '.', '.', '.', '.'},
			{'.', '.', '.', '.', '.', '.', '.', '.'},
			{'.', '.', '.', '.', '.', 'T', '.', '#'},
			{'.', '.', '.', '.', '.', '#', '.', '.'},
			{'.', '.', '.', '.', '.', '#', '.', '.'},
			{'.', '.', '.', '.', '.', '.', 'S', '.'},
			{'.', '.', '.', 'B', '.', '.', '.', '.'},
			{'.', '.', '.', '.', '.', '.', '.', '.'}
		}
	);
	allGrids.push_back(
		{
			{'#', '.', '.', '#', '#', '#', '#', '#'},
			{'#', '.', '.', 'T', '#', '.', '.', '#'},
			{'#', '.', '.', '.', '#', 'B', '.', '#'},
			{'#', '.', '.', '.', '.', '.', '.', '#'},
			{'#', '.', '.', '.', '#', '.', 'S', '#'},
			{'#', '.', '.', '#', '#', '#', '#', '#'}
		}
	);
	allGrids.push_back(
		{
			{'.', '.', '#', '.', '.', '.', '.', '.', '.', '.'},
			{'.', '#', '.', '#', 'B', '#', '.', '#', '.', '.'},
			{'.', '#', '.', '.', '.', '.', '.', '.', 'T', '.'},
			{'#', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
			{'.', '.', '.', '.', '.', '.', '.', '.', '.', '#'},
			{'.', '.', '.', '.', '.', '.', '.', '.', '#', '.'},
			{'.', '.', '.', '#', '.', '.', '#', '#', '.', '.'},
			{'.', '.', '.', '.', '#', '.', '.', '#', '.', '.'},
			{'.', '#', '.', 'S', '.', '.', '.', '.', '.', '.'},
			{'#', '.', '.', '#', '.', '.', '.', '.', '.', '#'}
		}
	);
	allGrids.push_back(
		{
			{'.', '.', '.', '.', '.', '.', '.', '.'},
			{'.', '.', '#', '.', '.', '.', '.', '.'},
			{'.', 'T', '.', '.', '.', '.', '.', '#'},
			{'#', '.', '.', '.', '#', '.', '.', '.'},
			{'.', '.', '.', '.', '.', '.', '.', '.'},
			{'.', '.', '.', '.', '.', '.', '.', '.'},
			{'.', '.', 'S', '.', 'B', '.', '.', '.'},
			{'.', '.', '.', '.', '.', '.', '.', '.'}
		}
	);
	allGrids.push_back(
		{
			{'.', '#', '.', '.', '.', '.', '.', '.'},
			{'.', '.', '.', '.', '.', '.', 'B', '.'},
			{'.', '.', '.', '.', '.', '.', '.', '.'},
			{'.', '.', '.', '.', '.', '.', '.', '.'},
			{'.', '#', '.', '.', 'T', 'S', '.', '.'},
			{'.', '.', '.', '.', '.', '#', '.', '.'},
			{'.', '.', '.', '.', '.', '.', '.', '#'},
			{'.', '.', '.', '.', '.', '#', '.', '.'}
		}
	);
	return allGrids;
}